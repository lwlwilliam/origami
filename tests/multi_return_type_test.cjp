<?php
// 测试多返回值类型声明

// 基本多返回值类型声明
function getUserInfo(): string, int, string {
    return "Alice", 25, "Beijing";
}

// 测试函数调用
$name, $age, $city = getUserInfo();
echo "Name: {$name}, Age: {$age}, City: {$city}\n";

// 混合类型多返回值
function getCoordinates(): int, int {
    return 10, 20;
}

$x, $y = getCoordinates();
echo "Coordinates: ({$x}, {$y})\n";

// 可空类型多返回值
function getNullableInfo(): ?string, ?int {
    return "Hello", null;
}

$str, $num = getNullableInfo();
echo "String: " + ($str ?? "null") + ", Number: " + ($num ?? "null") + "\n";

// 复杂多返回值
function getComplexData(): string, int, bool, array {
    return "test", 42, true, [1, 2, 3];
}

$str, $int, $bool, $arr = getComplexData();
echo "String: {$str}, Int: {$int}, Bool: " + ($bool ? "true" : "false") + ", Array: {$arr}\n";

// 单返回值（保持兼容性）
function getSingleValue(): string {
    return "single";
}

$single = getSingleValue();
echo "Single: {$single}\n";

// 无返回值
function doSomething() {
    echo "Doing something\n";
}

doSomething();

// 测试错误情况
function testError(): string, int {
    return "only one value"; // 应该返回两个值
}

// 这个调用可能会产生错误
try {
    $a, $b = testError();
    echo "Success: {$a}, {$b}\n";
} catch (Exception $e) {
    echo "Error: " + $e->getMessage() + "\n";
}

echo "多返回值类型声明测试完成\n"; 