<?php
// 脚本类反射测试

echo "=== 脚本类反射测试 ===\n";

// 定义一个脚本类
class MyClass {
    public string $name = "default";
    private $secret = "hidden";
    public int $age = 25;
    public $price = 99.99;
    public $isActive = true;
    public $data = null;
    
    public function __construct($name) {
        $this->name = $name;
    }
    
    public function getName() {
        return $this->name;
    }
    
    public function setName($name) {
        $this->name = $name;
    }
    
    private function secretMethod() {
        return "secret";
    }
}

// 创建反射实例
$reflect = new Reflect();

// 1. 获取MyClass类的完整信息
echo "1. MyClass类完整信息:\n";
$classInfo = $reflect->getClassInfo("MyClass");
if ($classInfo != "") {
    // 简单解析类信息并友好显示
    echo "类信息: " . $classInfo . "\n";
    // 这里可以添加更复杂的解析逻辑
} else {
    echo "类不存在\n";
}

// 2. 列出MyClass类的方法
echo "\n2. MyClass类的方法列表:\n";
$methods = $reflect->listMethods("MyClass");
if ($methods != "[]") {
    echo "方法列表: " . $methods . "\n";
    // 这里可以添加更复杂的解析逻辑
} else {
    echo "无方法或类不存在\n";
}

// 3. 列出MyClass类的属性
echo "\n3. MyClass类的属性列表:\n";
$properties = $reflect->listProperties("MyClass");
if ($properties != "[]") {
    echo "属性列表: " . $properties . "\n";
    // 这里可以添加更复杂的解析逻辑
} else {
    echo "无属性或类不存在\n";
}

// 4. 获取特定方法的详细信息
echo "\n4. 获取getName方法的详细信息:\n";
$methodInfo = $reflect->getMethodInfo("MyClass", "getName");
if ($methodInfo != "") {
    echo "方法信息: " . $methodInfo . "\n";
    // 这里可以添加更复杂的解析逻辑
} else {
    echo "方法不存在\n";
}

// 5. 获取各种属性的详细信息
echo "\n5. 获取各种属性的详细信息:\n";

$propertiesToCheck = ["name", "age", "price", "isActive", "data"];
foreach ($propertiesToCheck as $propName) {
    echo "属性 $propName 信息:\n";
    $propertyInfo = $reflect->getPropertyInfo("MyClass", $propName);
    if ($propertyInfo != "") {
        echo "  详细信息: " . $propertyInfo . "\n";
        // 这里可以添加更复杂的解析逻辑
    } else {
        echo "  属性不存在\n";
    }
    echo "\n";
}

// 6. 测试实际使用
echo "\n6. 实际使用测试:\n";
$obj = new MyClass("Test");
echo "对象名称: " . $obj->getName() . "\n";

echo "\n脚本类反射测试完成\n";