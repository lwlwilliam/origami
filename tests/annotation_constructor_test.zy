<?php

// 测试注解类的构造函数功能

// 创建注解实例（模拟构造函数接收参数）
$controller = new Annotation\Controller();
$route = new Annotation\Route();
$inject = new Annotation\Inject();
$getMapping = new Annotation\GetMapping();

echo "=== 注解类构造函数测试 ===\n\n";

// 测试构造函数调用
echo "1. 测试构造函数:\n";
$result = $controller->__construct();
echo "Controller: " . $result . "\n";

$result = $route->__construct();
echo "Route: " . $result . "\n";

$result = $inject->__construct();
echo "Inject: " . $result . "\n";

$result = $getMapping->__construct();
echo "GetMapping: " . $result . "\n";

echo "\n2. 测试处理方法:\n";
$result = $controller->process();
echo "Controller process: " . $result . "\n";

$result = $route->process();
echo "Route process: " . $result . "\n";

$result = $inject->process();
echo "Inject process: " . $result . "\n";

$result = $getMapping->process();
echo "GetMapping process: " . $result . "\n";

echo "\n3. 测试注册方法:\n";
$result = $controller->register();
echo "Controller register: " . $result . "\n";

$result = $route->register();
echo "Route register: " . $result . "\n";

$result = $inject->inject();
echo "Inject inject: " . $result . "\n";

$result = $getMapping->mapping();
echo "GetMapping mapping: " . $result . "\n";

echo "\n✅ 注解类构造函数功能测试完成！\n";
echo "注解类现在可以接收注解参数和被注解的反射实例。\n"; 